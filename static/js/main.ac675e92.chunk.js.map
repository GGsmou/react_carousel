{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","fullWidth","useState","currentPosition","setCurrentPosition","scrollCarousel","isNext","prevPosition","nextPosition","maxPosition","length","className","style","width","transform","transitionDuration","gap","map","image","index","src","alt","type","onClick","defaultProps","App","setItemWidth","setFrameSize","setStep","setAnimationDuration","numNormalizer","num","htmlFor","placeholder","id","onChange","e","Number","target","value","ReactDOM","render","document","getElementById"],"mappings":"mMAUaA,EAAoC,SAAC,GAM3C,IALLC,EAKI,EALJA,OAKI,IAJJC,YAII,MAJG,EAIH,MAHJC,iBAGI,MAHQ,EAGR,MAFJC,iBAEI,MAFQ,IAER,MADJC,yBACI,MADgB,IAChB,EAEEC,EAAYF,EADN,EAEZ,EAA8CG,mBAAS,GAAvD,mBAAOC,EAAP,KAAwBC,EAAxB,KAEMC,EAAiB,SAACC,GACtBF,GAAmB,SAAAG,GACjB,IAAMC,EAAeF,EAASC,EAAeV,EAAOU,EAAeV,EAC7DY,EAAcb,EAAOc,OAASZ,EAEpC,OAAIU,EAAe,EACV,EAGLA,EAAeC,EACVA,EAGFD,MAIX,OACE,sBAAKG,UAAU,WAAf,UACE,qBACEA,UAAU,sBACVC,MAAO,CAAEC,MAAM,GAAD,OAAKZ,EAAYH,EAAjB,OAFhB,SAIE,oBACEa,UAAU,iBACVC,MAAO,CACLE,UAAU,eAAD,OAAiBX,EAAkBF,EAAnC,OACTc,mBAAmB,GAAD,OAAKf,EAAL,MAClBgB,IAAI,GAAD,OAhCD,EAgCC,OALP,SAQGpB,EAAOqB,KAAI,SAACC,EAAOC,GAAR,OACV,oBAAgBR,UAAU,iBAA1B,SACE,qBACES,IAAG,gBAAWD,EAAQ,EAAnB,QACHE,IAAG,UAAKF,EAAQ,GAChBN,MAAOd,KAJFmB,UAWf,wBACEI,KAAK,SACLC,QAAS,kBAAMlB,GAAe,IAC9BM,UAAS,wBAAuC,IAApBR,EAAwB,gBAAkB,IAHxE,oBAOA,wBACEmB,KAAK,SACLC,QAAS,kBAAMlB,GAAe,IAC9B,UAAQ,OACRM,UAAS,wBAAmBR,IAAoBP,EAAOc,OAASZ,EAAY,gBAAkB,IAJhG,wBAYNH,EAAS6B,aAAe,CACtB3B,KAAM,EACNC,UAAW,EACXC,UAAW,IACXC,kBAAmB,KAGNL,ICtFF8B,EAAgB,WAC3B,IAAM7B,EAAS,CACb,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,gBAGF,EAAkCM,mBAAS,KAA3C,mBAAOH,EAAP,KAAkB2B,EAAlB,KACA,EAAkCxB,mBAAS,GAA3C,mBAAOJ,EAAP,KAAkB6B,EAAlB,KACA,EAAwBzB,mBAAS,GAAjC,mBAAOL,EAAP,KAAa+B,EAAb,KACA,EAAkD1B,mBAAS,KAA3D,mBAAOF,EAAP,KAA0B6B,EAA1B,KAEMC,EAAgB,SAACC,GAAD,OAA0BA,EAAM,EAAI,EAAIA,GAE9D,OACE,sBAAKpB,UAAU,MAAf,UACE,oBAAI,UAAQ,QAAZ,iCAAsCf,EAAOc,OAA7C,aAEA,uBAAOsB,QAAQ,SAAf,SACE,uBACEV,KAAK,OACLW,YAAY,YACZC,GAAG,SACHC,SAAU,SAACC,GAAD,OAAOV,EAAaI,EAAcO,OAAOD,EAAEE,OAAOC,SACvD,UAGT,uBAAOP,QAAQ,UAAf,SACE,uBACEV,KAAK,OACLY,GAAG,UACHD,YAAY,YACZE,SAAU,SAACC,GAAD,OAAOT,EAAaG,EAAcO,OAAOD,EAAEE,OAAOC,SACvD,QAGT,uBAAOP,QAAQ,SAAf,SACE,uBACEV,KAAK,OACLY,GAAG,SACHD,YAAY,OACZE,SAAU,SAACC,GAAD,OAAOR,EAAQE,EAAcO,OAAOD,EAAEE,OAAOC,SAAW,QAGtE,uBACEjB,KAAK,OACLW,YAAY,oBACZE,SAAU,SAACC,GAAD,OAAOP,EACfC,EAAcO,OAAOD,EAAEE,OAAOC,SAAW,QAI7C,cAAC,EAAD,CACE3C,OAAQA,EACRG,UAAWA,EACXD,UAAWA,EACXD,KAAMA,EACNG,kBAAmBA,QCjE3BwC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.ac675e92.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ninterface CarouselProps {\n  images: string[];\n  step?: number;\n  frameSize?: number;\n  itemWidth?: number;\n  animationDuration?: number;\n}\nexport const Carousel: React.FC<CarouselProps> = ({\n  images,\n  step = 3,\n  frameSize = 3,\n  itemWidth = 130,\n  animationDuration = 1000,\n}) => {\n  const gap = 0;\n  const fullWidth = itemWidth + gap;\n  const [currentPosition, setCurrentPosition] = useState(0);\n\n  const scrollCarousel = (isNext: boolean) => {\n    setCurrentPosition(prevPosition => {\n      const nextPosition = isNext ? prevPosition + step : prevPosition - step;\n      const maxPosition = images.length - frameSize;\n\n      if (nextPosition < 0) {\n        return 0;\n      }\n\n      if (nextPosition > maxPosition) {\n        return maxPosition;\n      }\n\n      return nextPosition;\n    });\n  };\n\n  return (\n    <div className=\"Carousel\">\n      <div\n        className=\"Carousel__container\"\n        style={{ width: `${fullWidth * frameSize}px` }}\n      >\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            transform: `translateX(-${currentPosition * fullWidth}px)`,\n            transitionDuration: `${animationDuration}ms`,\n            gap: `${gap}px`,\n          }}\n        >\n          {images.map((image, index) => (\n            <li key={image} className=\"Carousel__item\">\n              <img\n                src={`./img/${index + 1}.png`}\n                alt={`${index + 1}`}\n                width={itemWidth}\n              />\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <button\n        type=\"button\"\n        onClick={() => scrollCarousel(false)}\n        className={`btn btn--prev ${currentPosition === 0 ? 'btn--disabled' : ''}`}\n      >\n        ←\n      </button>\n      <button\n        type=\"button\"\n        onClick={() => scrollCarousel(true)}\n        data-cy=\"next\"\n        className={`btn btn--next ${currentPosition === images.length - frameSize ? 'btn--disabled' : ''}`}\n      >\n        →\n      </button>\n    </div>\n  );\n};\n\nCarousel.defaultProps = {\n  step: 3,\n  frameSize: 3,\n  itemWidth: 130,\n  animationDuration: 1000,\n};\n\nexport default Carousel;\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\nexport const App: React.FC = () => {\n  const images = [\n    './img/1.png',\n    './img/2.png',\n    './img/3.png',\n    './img/4.png',\n    './img/5.png',\n    './img/6.png',\n    './img/7.png',\n    './img/8.png',\n    './img/9.png',\n    './img/10.png',\n  ];\n\n  const [itemWidth, setItemWidth] = useState(130);\n  const [frameSize, setFrameSize] = useState(3);\n  const [step, setStep] = useState(3);\n  const [animationDuration, setAnimationDuration] = useState(1000);\n\n  const numNormalizer = (num: number): number => (num < 0 ? 0 : num);\n\n  return (\n    <div className=\"App\">\n      <h1 data-cy=\"title\">{`Carousel with ${images.length} images`}</h1>\n\n      <label htmlFor=\"itemId\">\n        <input\n          type=\"text\"\n          placeholder=\"itemWidth\"\n          id=\"itemId\"\n          onChange={(e) => setItemWidth(numNormalizer(Number(e.target.value))\n            || 130)}\n        />\n      </label>\n      <label htmlFor=\"frameId\">\n        <input\n          type=\"text\"\n          id=\"frameId\"\n          placeholder=\"frameSize\"\n          onChange={(e) => setFrameSize(numNormalizer(Number(e.target.value))\n            || 3)}\n        />\n      </label>\n      <label htmlFor=\"stepId\">\n        <input\n          type=\"text\"\n          id=\"stepId\"\n          placeholder=\"step\"\n          onChange={(e) => setStep(numNormalizer(Number(e.target.value)) || 3)}\n        />\n      </label>\n      <input\n        type=\"text\"\n        placeholder=\"animationDuration\"\n        onChange={(e) => setAnimationDuration(\n          numNormalizer(Number(e.target.value)) || 1000,\n        )}\n      />\n\n      <Carousel\n        images={images}\n        itemWidth={itemWidth}\n        frameSize={frameSize}\n        step={step}\n        animationDuration={animationDuration}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}